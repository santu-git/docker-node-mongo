version: '3'

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: b3-monitor
    container_name: b3-monitor
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db-cont
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
      - RABBITMQ_HOST=message-cont
      - RABBITMQ_USER=$RABBITMQ_DEFAULT_USER
      - RABBITMQ_PASS=$RABBITMQ_DEFAULT_PASS
      - RABBITMQ_CHANNEL=$RABBITMQ_CHANNEL
    ports:
      - "80:8080"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules
    networks:
      - app-network
    command: ./wait-for.sh db:27017 -- /home/node/app/node_modules/.bin/nodemon app.js 

  db:
    image: mongo:4.1.8-xenial
    container_name: db-cont
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:     
      - dbdata:/data/db
    networks:
      - app-network  
  
  message:
    image: rabbitmq:3
    container_name: message-cont
    restart: unless-stopped
    env_file: .env
    environment:
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
    ports:
      - 4369:4369
      - 5671:5671
      - 5672:5672
      - 25672:25672
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
  node_modules:  